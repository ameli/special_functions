name: deploy-conda-3

on:
    push:
        branches:
            - main
    release:
        types: 
            - published

jobs:
    # On linux and windows, package is built directly from the source code
    build_upload_conda_for_linux_windows:
        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest]
        steps:
            - name: Setup Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  auto-update-conda: true

            - name: Install Visual C++ for Python 2.7
              if: runner.os == 'Windows'
              run: choco install vcpython27 -f -y

            - name: Checkout
              uses: actions/checkout@v2

            - name: Build and upload package
              shell: bash -l {0}
              run: |
                  conda install -y conda-build anaconda-client
                  conda config --set anaconda_upload yes
                  export PATH=$(conda info --root):$PATH
                  export PATH=$(conda info --root)/bin:$PATH
                  conda-build --output-folder . .
              env:
                  CYTHON_BUILD_IN_SOURCE: 'true'  # see setup.py. Avoids a bug when building with multiple python variants
                  ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

    # On MacOS, package is built from wheels, not directly from the source code
    build_upload_conda_for_mac:
        name: Build on macos-latest
        runs-on: macos-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Install OpenMP for MacOS
              run: |
                  brew install libomp
                  brew install suite-sparse
                  # brew install llvm

            - name: Build wheel
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install --upgrade wheel
                  python -m pip install --upgrade numpy
                  python -m pip install --upgrade .[full]
                  python setup.py bdist_wheel

            - name: Install conda, conda-build, and conda-client
              run: |
                  brew install wget
                  wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
                  bash miniconda.sh -b -p $HOME/miniconda
                  export PATH="$HOME/miniconda/bin:$PATH"
                  hash -r
                  conda config --set always_yes yes --set changeps1 no
                  conda update -q conda
                  conda install conda-build
                  conda install anaconda-client

            - name: Build conda package based on already compiled wheel and upload package
              run: |
                  # xcrun --show-sdk-path
                  export PATH="$HOME/miniconda/bin:$PATH"
                  conda config --set anaconda_upload yes
                  conda-build --output-folder . .
              env:
                  CYTHON_BUILD_IN_SOURCE: 'true'  # see setup.py. Avoids a bug when building with multiple python variants
                  ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

            # - name: Upload to Anaconda Cloud
            #   run: |
            #       export PATH="$HOME/miniconda/bin:$PATH"
            #       anaconda upload --force --label main linux-64/*.tar.bz2
            #       anaconda upload --force --label main linux-aarch64/*.tar.bz2
            #       anaconda upload --force --label main osx-64/*.tar.bz2
            #       anaconda upload --force --label main win-64/*.tar.bz2
            #       anaconda upload --force --label main win-32/*.tar.bz2
            #   env:
            #       ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

    test_conda:
        needs: [build_upload_conda_for_linux_windows,build_upload_conda_for_mac]
        name: Test on ${{ matrix.os }} and Python ${{ matrix.python-version }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [2.7, 3.6, 3.7, 3.8, 3.9]

        steps:
            - name: Setup Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  auto-update-conda: true
                  python-version: ${{ matrix.python-version }}
                  activate-environment: myenv

        # steps:
        #     - name: Download conda in Linux
        #       if: runner.os == 'linux'
        #       run: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        #
        #     - name: Download conda in macOS
        #       if: runner.os == 'macos'
        #       run: curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o miniconda.sh

            # - name: Download conda in Windows
            #   if: runner.os == 'Windows'
            #   run: |
            #       python -m pip install wget
            #       wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe -O miniconda.sh

            # - name: Install conda
            #   run: |
            #       sh miniconda.sh -b -p $HOME/miniconda
            #       export PATH="$HOME/miniconda/bin:$PATH"
            #       hash -r
            #       conda config --set always_yes yes --set changeps1 no
            #       conda update -q conda

            # - name: Test (in Unix)
            #   if: runner.os != 'Windows'
            #   run: |
            #       mv TraceInv TraceInv-DoNotImport
            #       export PATH="$HOME/miniconda/bin:$PATH"
            #       source $(conda info --root)/etc/profile.d/conda.sh
            #       
            #       PythonVersions="2.7 3.6 3.7 3.8 3.9"
            #       for PythonVersion in $PythonVersions
            #       do
            #           conda create --name env-${PythonVersion} -c s-ameli python=${PythonVersion} traceinv pytest-cov -y
            #           conda activate env-${PythonVersion}
            #           pytest
            #           conda deactivate
            #           conda remove --name env-${PythonVersion} --all -y
            #       done

            - name: Install Visual C++ for Python 2.7
              if: |
                  runner.os == 'Windows' &&
                  matrix.python-version == '2.7'
              run: choco install vcpython27 -f -y

            # - name: Install package
              # run: |
                  # conda config --set channel_priority strict
                  # conda install -c conda-forge pytest pytest-cov -y
                  # conda install -c conda-forge -c s-ameli traceinv -y
                  # conda init

            - name: Checkout
              uses: actions/checkout@v2

            - name: Test
              shell: bash -l {0}
              run: |
                  mv TraceInv TraceInv-DoNotImport
                  rm setup.cfg
                  conda install -c s-ameli traceinv -y
                  conda install pytest -y
                  pytest

            # - name: Test (in Windows)
            #   if: runner.os == 'Windows'
            #   run: |
            #       mkdir ~\tmp
            #       Copy-Item -Path tests -Destination ~\tmp -Recurse
            #       Copy-Item -Path examples -Destination ~\tmp -Recurse
            #       cd ~\tmp
            #       choco install vcpython27 -f -y
            #       $RootDir=$(conda info --root)
            #       . $RootDir\etc\profile.d\conda.sh
            #       $PythonVersions="2.7","3.6","3.7","3.8","3.9"
            #       foreach ($PythonVersion in $PythonVersions)
            #       {
            #           conda create --name env-$PythonVersion -c s-ameli python=$PythonVersion pytest-cov -y
            #           conda activate env-$PythonVersion
            #           conda install -c s-ameli traceinv -y
            #           pytest-cov
            #           conda deactivate
            #           conda remove --name env-$PythonVersion --all -y
            #       }
