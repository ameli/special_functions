name: deploy-conda

on:
    push:
        branches:
            - main
    release:
        types: 
            - published

jobs:
    build_upload:
        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
        steps:
            - name: Setup Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  auto-update-conda: true

            - name: Install Visual C++ for Python 2.7
              if: runner.os == 'Windows'
              run: choco install vcpython27 -f -y

            - name: Checkout
              uses: actions/checkout@v2

            - name: Install conda
              shell: bash -l {0}
              run: |
                  conda install -y conda-build anaconda-client
                  conda config --set anaconda_upload yes
                  conda config --set always_yes yes --set changeps1 no

            - name: Build for Linux and Windows
              if: runner.os != 'macos'
              shell: bash -l {0}
              run: |
                  export PATH=$(conda info --root):$PATH
                  export PATH=$(conda info --root)/bin:$PATH
                  conda-build --output-folder . .
              env:
                  CYTHON_BUILD_IN_SOURCE: 'true'  # see setup.py. Avoids a bug when building with multiple python variants
                  ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

            - name: Build for macOS
              if: runner.os == 'macos'
              shell: bash -l {0}
              run: |
                  export PATH=$(conda info --root):$PATH
                  export PATH=$(conda info --root)/bin:$PATH
                  conda-build --output-folder . .
                  # conda-build -c conda-forge  --output-folder bld-conda-mac .
              env:
                  CYTHON_BUILD_IN_SOURCE: 'true'  # see setup.py. Avoids a bug when building with multiple python variants
                  ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

    test_conda:
        needs: [build_upload]
        name: Test on ${{ matrix.os }} and Python ${{ matrix.python-version }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [3.6, 3.7, 3.8, 3.9]
                include:
                    - os: ubuntu-latest
                      python-version: 2.7

        steps:
            - name: Setup Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  auto-update-conda: true
                  python-version: ${{ matrix.python-version }}

            - name: Checkout
              uses: actions/checkout@v2

            - name: Install package (not macos)
              shell: bash -l {0}
              if: runner.os != 'macos'
              run: conda install -c s-ameli special_functions -y

            - name: Install package (macos)
              shell: bash -l {0}
              if: runner.os == 'macos'
              run: conda install -c s-ameli -c conda-forge special_functions -y

            - name: Test
              shell: bash -l {0}
              run: |
                  mv special_functions special_functions-DoNotImport
                  rm setup.cfg
                  conda install -c conda-forge scipy -y
                  conda install pytest -y
                  pytest
