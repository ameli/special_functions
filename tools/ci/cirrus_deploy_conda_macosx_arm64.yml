# SPDX-FileCopyrightText: Copyright 2021, Siavash Ameli <sameli@berkeley.edu>
# SPDX-License-Identifier: BSD-3-Clause
# SPDX-FileType: SOURCE
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the license found in the LICENSE.txt file in the root
# directory of this source tree.


# =======================
# conda macosx arm64 cibw
# =======================

conda_macosx_arm64_cibw: &CONDA_MACOSX_ARM64_CIBW
  install_cibuildwheel_script:
    - python -m pip install cibuildwheel
  cibuildwheel_script:
    - cibuildwheel
  conda_macosx_arm64_wheels_artifacts:
    path: "wheelhouse/*.whl"


# ===============================
# conda build wheels macosx arm64
# ===============================

conda_build_wheels_macosx_arm64_task:
  use_compute_credits: $CIRRUS_USER_COLLABORATOR == 'true'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-sonoma-xcode:latest
    cpu: 1
    memory: 4G
  matrix:
    - env:
        CIBW_BUILD: "cp39-macosx_arm64"
    - env:
        CIBW_BUILD: "cp310-macosx_arm64"
    - env:
        CIBW_BUILD: "cp311-macosx_arm64"
    - env:
        CIBW_BUILD: "cp312-macosx_arm64"
  env:
    PATH: /opt/homebrew/opt/python@3.10/bin:/usr/local/lib:/usr/local/include:$PATH
    # Specifying CIBW_ENVIRONMENT_MACOS overrides pyproject.toml, so include
    # all the settings from there, otherwise they're lost.
    # SDKROOT needs to be set for repackaged conda-forge gfortran compilers
    # supplied by isuruf.
    # Find out SDKROOT via `xcrun --sdk macosx --show-sdk-path`
    # MACOS linker doesn't support stripping symbols, hence we set: CFLAGS="-fno-strict-aliasing"
    CIBW_ENVIRONMENT_MACOS: >
      RUNNER_OS=macOS
      SDKROOT=/Applications/Xcode-15.1.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.2.sdk
      LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      CFLAGS="-fno-strict-aliasing"
    CIBW_ARCHS: "arm64"
    # CIBW_BUILD: "*-macosx_arm64"
    CIBW_SKIP: "pp* cp36-* cp37-* cp38-*"
    CIBW_BUILD_VERBOSITY: "3"
    CIBW_BEFORE_BUILD: "bash {project}/tools/wheels/install_gfortran.sh {project}"
    CIBW_TEST_SKIP: "*_universal2:arm64"

  build_script:
    - uname -m
    - brew install python@3.11
    - sudo ln -s /opt/homebrew/opt/python@3.11/bin/python3.11 /usr/local/bin/python
    - which python
    - python -c "import platform;print(platform.python_version());print(platform.system());print(platform.machine())"
    - clang --version
  <<: *CONDA_MACOSX_ARM64_CIBW


# =====================================
# conda build upload conda macosx arm64
# =====================================

conda_build_upload_conda_macosx_arm64_task:
  use_compute_credits: $CIRRUS_USER_COLLABORATOR == 'true'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-sonoma-xcode:latest
    cpu: 1
    memory: 4G
  depends_on:
    - conda_build_wheels_macosx_arm64
  env:
    ANACONDA_API_TOKEN: ENCRYPTED[46301c55bb8947383f5ada690555715865045dc694dacfba2182fa482892e8ac2b1c846dc022e85ba74d8ddd8816bbca]

  build_script:
    # The name of the zip file is derived from the `wheels_artifact` line.
    # If you change the artifact line to `myfile_artifact` then it would be
    # called myfile.zip
    - curl https://api.cirrus-ci.com/v1/artifact/build/$CIRRUS_BUILD_ID/conda_macosx_arm64_wheels.zip --output wheels.zip
    - mkdir -p dist
    - unzip -j wheels.zip -d dist
    - source ./tools/wheels/upload_wheels.sh
    - install_anaconda "macosx_arm64"
    - build_upload_anaconda "macosx_arm64"


# =======================
# conda test macosx arm64
# =======================

conda_test_macosx_arm64_task:
  use_compute_credits: $CIRRUS_USER_COLLABORATOR == 'true'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-sonoma-base:latest
    cpu: 1
    memory: 4G
  depends_on:
    - conda_build_upload_conda_macosx_arm64
  matrix:
    - env:
        PY_VER: "3.9"
    - env:
        PY_VER: "3.10"
    - env:
        PY_VER: "3.11"
    - env:
        PY_VER: "3.12"

  test_script:
    - uname -m
    - source ./tools/wheels/upload_wheels.sh
    - install_anaconda "macosx_arm64"
    - conda update conda -y
    - eval "$(conda shell.bash hook)"
    - conda create --name myenv python=${PY_VER} -y
    - conda activate myenv
    - which python
    - set -x
    - python -c "import platform;print(platform.python_version());print(platform.system());print(platform.machine())"
    - mv special_functions special_functions_do_not_import
    - conda install -c s-ameli special_functions -y
    - python -m pip install --upgrade pip
    - python -m pip install numpy
    - python -m pip install -r tests/requirements.txt
    - python -m pytest
